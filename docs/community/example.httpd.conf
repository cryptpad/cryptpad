# SPDX-FileCopyrightText: 2025 XWiki CryptPad Team <contact@cryptpad.org> and contributors
#
# SPDX-License-Identifier: AGPL-3.0-or-later

#   This file is included strictly as an example of how Apache httpd can be
#   configured to work with CryptPad. If you are using CryptPad in production
#   and require professional support please contact sales@cryptpad.org

#   This configuration requires mod_ssl, mod_socache_shmcb, mod_proxy,
#   mod_proxy_http and mod_headers

# Disable modules:
#   a2dismod status

# Enable modules:
#   a2enmod alias
#   a2enmod headers
#   a2enmod proxy
#   a2enmod proxy_http
#   a2enmod proxy_wstunnel (if Apache2 version less than 2.4.47)
#   a2enmod rewrite
#   a2enmod security2
#   a2enmod setenvif
#   a2enmod ssl

Listen 443

ServerSignature Off
ServerTokens ProductOnly

# openssl dhparam -out /path/to/apache2.dhparams.pem 4096
## presuming apache2 runs as user :www-data...
# chown :www-data /path/to/apache2.dhparams.pem
# chmod g-w,o-r /path/to/apache2.dhparams.pem
SSLOpenSSLConfCmd DHParameters "/path/to/apache2.dhparams.pem"

SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
SSLProxyCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
SSLHonorCipherOrder off
SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
SSLProxyProtocol all -SSLv3 -TLSv1 -TLSv1.1
SSLSessionCache "shmcb:logs/ssl_scache(512000)"
SSLSessionCacheTimeout 86400
SSLSessionTickets off
SSLUseStapling on
SSLStaplingCache "shmcb:logs/ssl_stapling(32768)"

<IfModule mod_proxy.c>
  ProxyRequests Off
  ProxyPreserveHost On
</IfModule>

<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteCond %{HTTPS} off
  RewriteRule ^(.*)$ "https://%{HTTP_HOST}/$1" [R=permanent,L]
</IfModule>

<VirtualHost *:443>

  Define main_domain your-main-domain.com
  Define sandbox_domain your-sandbox-domain.com
  Define cryptpad_host localhost
  Define cryptpad_repo /path/to/cryptpad.git

  ServerName ${main_domain}
  ServerAlias ${sandbox_domain}
  DocumentRoot ${cryptpad_repo}

  SSLEngine on
  SSLCertificateFile    /etc/letsencrypt/live/${main_domain}/fullchain.pem
  SSLCertificateKeyFile /etc/letsencrypt/live/${main_domain}/privkey.pem
  Include               /etc/letsencrypt/options-ssl-apache.conf

  BrowserMatch "MSIE [2-5]" \
    nokeepalive ssl-unclean-shutdown \
    downgrade-1.0 force-response-1.0
  Protocols h2 http/1.1

  AddType application/javascript mjs

  # CSP header values
  Define csp_script_src_safe "'self' resource: https://${main_domain}"
  Define csp_script_src_unsafe \
    "'self' 'unsafe-eval' 'unsafe-inline' resource: https://${main_domain}"
  Define csp_style_src "'unsafe-inline' 'self' https://${main_domain}"
  Define csp_connect_src \
    "'self' blob: https://${main_domain} https://${sandbox_domain} wss://${main_domain}"
  Define csp_font_src "'self' data: https://${main_domain}"
  Define csp_img_src "'self' data: blob: https://${main_domain}"
  Define csp_frame_src "'self' https://${sandbox_domain} blob:"
  Define csp_media_src "blob:"
  Define csp_child_src "https://${main_domain}"
  Define csp_worker_src "'self'"
  Define csp_frame_ancestors "'self' https://${main_domain}"

  # Set HTTP headers

  Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains"

  # CSP header
  Header set Content-Security-Policy "default-src 'none'; "
  Header edit Content-Security-Policy $ "style-src ${csp_style_src}; "
  Header edit Content-Security-Policy $ "font-src ${csp_font_src}; "
  Header edit Content-Security-Policy $ "child-src ${csp_child_src}; "
  Header edit Content-Security-Policy $ "frame-src ${csp_frame_src}; "
  Header edit Content-Security-Policy $ "connect-src ${csp_connect_src}; "
  Header edit Content-Security-Policy $ "img-src ${csp_img_src}; "
  Header edit Content-Security-Policy $ "media-src ${csp_media_src}; "
  Header edit Content-Security-Policy $ "frame-ancestors ${csp_frame_ancestors}; "
  Header edit Content-Security-Policy $ "worker-src ${csp_worker_src}; "

  # Conditions related to CSP header script-src value
  <If "%{REQUEST_URI} =~ m#^/unsafeiframe/inner\.html#">
    Header edit Content-Security-Policy $ "script-src ${csp_script_src_unsafe}; "
  </If>
  <ElseIf "%{HTTP_HOST} != '${sandbox_domain}'">
    Header edit Content-Security-Policy $ "script-src ${csp_script_src_safe}; "
  </ElseIf>
  <ElseIf "%{REQUEST_URI} =~ m#^/common/onlyoffice/.*/.*\.html#">
    Header edit Content-Security-Policy $ "script-src ${csp_script_src_unsafe}; "
  </ElseIf>
  <ElseIf "%{REQUEST_URI} =~ m#^/(?:sheet|doc|presentation)/inner\.html#">
    Header edit Content-Security-Policy $ "script-src ${csp_script_src_unsafe}; "
  </ElseIf>
  <Else>
    Header edit Content-Security-Policy $ "script-src ${csp_script_src_safe}; "
  </Else>

  <If "%{QUERY_STRING} =~ m#(^|&)ver=#">
    Header set Cache-Control "max-age=31536000"
  </If>
  <Else>
    Header set Cache-Control "no-cache"
  </Else>

  <If "%{REQUEST_URI} =~ m#^/common/onlyoffice/.*/fonts/#">
    Header set Access-Control-Allow-Origin "*"
  </If>
  <Else>
    Header set Access-Control-Allow-Origin "${sandbox_domain}"
  </Else>

  Header set X-XSS-Protection "1; mode=block"
  Header set X-Content-Type-Options nosniff
  Header set Access-Control-Allow-Credentials true
  Header set Permissions-Policy "interest-cohort=()"
  Header set Cross-Origin-Resource-Policy "cross-origin"
  Header set Cross-Origin-Embedder-Policy "require-corp"

  # Various RewriteRules below

  <LocationMatch "^/customize/">
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} !-f
    RewriteRule ^/customize/(.*)$ /customize.dist/$1
  </LocationMatch>

  <LocationMatch "^/(api|extensions.js)/">
    Header set X-Real-IP expr=%{REMOTE_ADDR}
    Header set X-Forwarded-For expr=%{REMOTE_ADDR}
  </LocationMatch>

  <LocationMatch "^/(blob|block)/">
    <If "%{REQUEST_METHOD} == 'OPTIONS'">
      Header set Access-Control-Allow-Methods "GET"
      Header append Access-Control-Allow-Methods "POST"
      Header append Access-Control-Allow-Methods "OPTIONS"

      Header set Access-Control-Allow-Headers "DNT"
      Header append Access-Control-Allow-Headers "X-CustomHeader"
      Header append Access-Control-Allow-Headers "Keep-Alive"
      Header append Access-Control-Allow-Headers "User-Agent"
      Header append Access-Control-Allow-Headers "X-Requested-With"
      Header append Access-Control-Allow-Headers "If-Modified-Since"
      Header append Access-Control-Allow-Headers "Cache-Control"
      Header append Access-Control-Allow-Headers "Content-Type"
      Header append Access-Control-Allow-Headers "Content-Range"
      Header append Access-Control-Allow-Headers "Range"

      Header set Access-Control-Max-Age 1728000
      Header set Content-Type "application/octet-stream; charset=utf-8"
      Header set Content-Length 0

      RedirectMatch 204 ^/(blob|block)/
    </If>
  </LocationMatch>

  # Ensure these URI's resolve to a directory path to avoid 404 response status
  RedirectMatch permanent ^/(admin|calendar|checkup|code|contacts|convert)$ /$1/
  RedirectMatch permanent ^/(debug|diagram|doc|drive|file|filepicker|form)$ /$1/
  RedirectMatch permanent ^/(kanban|login|media|notifications|pad|poll)$ /$1/
  RedirectMatch permanent ^/(presentation|profile|recovery|register|report)$ /$1/
  RedirectMatch permanent ^/(settings|sheet|slide|support|teams|todo|user)$ /$1/
  RedirectMatch permanent ^/(whiteboard)$ /$1/

  # Configure reverse proxy with websockets

  <Location "/">
    LimitRequestBody 157286400
    ProxyPass "ws://${cryptpad_host}:3000/"
    ProxyPass "http://${cryptpad_host}:3000/" upgrade=websocket
    ProxyPassReverse http://${cryptpad_host}:3000/
  </Location>

  <Location "/cryptpad_websocket">
    ProxyPass "ws://${cryptpad_host}:3003/"
    ProxyPass "http://${cryptpad_host}:3003/" upgrade=websocket
    ProxyPassReverse ws://${cryptpad_host}:3003/
  </Location>

  RewriteCond %{HTTP:Upgrade} =websocket [NC]
  RewriteRule ^/(.*) ws://${cryptpad_host}:3003/$1 [P,L]
  RewriteCond %{HTTP:Upgrade} !=websocket [NC]
  RewriteRule ^/(.*) http://${cryptpad_host}:3000/$1 [P,L]

</VirtualHost>
